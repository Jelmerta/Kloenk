worker_processes 2;

events {
    worker_connections 1024;
}

http {
    limit_req_zone $binary_remote_addr zone=ratelimit_zone:120m rate=20r/s; # multiple requests are made to retrieve resources, when we use CDN we can maybe lower
    server_tokens off;
    access_log off;
    log_not_found off;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name hatsu.tech;

        # ACME challenge directory
        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot-acme;
            try_files $uri =404;
        }

        # Redirect all other HTTP requests to HTTPS / HSTS
        location / {
            return 301 https://$host$request_uri;
         }
    }

    # TODO maybe other port 8443
    server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        listen 443 quic reuseport; # TODO not reuseport?
        listen [::]:443 quic reuseport;
        server_name hatsu.tech;
        http2 on;

        ssl_protocols TLSv1.3;

        ssl_ecdh_curve X25519:prime256v1:secp384r1;
        ssl_prefer_server_ciphers off;

        ssl_certificate /etc/ssl/fullchain.pem;
        ssl_certificate_key /etc/ssl/privkey.pem;

        # OCSP Stapling BoringSSL not supported? https://stackoverflow.com/questions/74009118/nginx-warn-ssl-stapling-ignored-not-supported
        # Patch file is available at https://github.com/kn007/patch/blob/master/Enable_BoringSSL_OCSP.patch (is that really all that is needed...? https://blog.ononoki.org/enable-http3-for-nginx/)
        # OCSP is still enabled through Cloudflare it seems. Perhaps just delete stapling/trusted/resolved then?
        ssl_stapling on;
        ssl_stapling_verify on;

        # verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/ssl/chain.pem;

        # async 'resolver' is important for proper operation of OCSP stapling
        resolver 1.1.1.1;

        # Make sure to handle additional requests beyond rate limit immediately
        limit_req zone=ratelimit_zone burst=20 nodelay;
        limit_req_status 429;


#          TODO probably only want these active when calling webtransport
#  TODO probably not even correct since we are not serving other files on http3 as i understand
        # Enable HTTP/3
        add_header Alt-Svc 'h3=":443"; ma=86400';

        # Handling Quic/WebTransport hopefully
        quic_retry on; # Address validation: https://datatracker.ietf.org/doc/html/rfc9000#name-address-validation
        ssl_early_data on; # 0-RTT (dont think supported in openresty, need some specific SSL implementation: https://nginx.org/en/docs/quic.html)


           # WebTransport requires these headers
           # add_header 'Access-Control-Allow-Origin' '*';
            #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
           # add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type';


        # quic_gso on

        include mime.types;
        default_type application/octet-stream;  # Default type if no match is found

        types {
#             text/html              html;# TODO content type missing / brotli not working for index.html. maybe this needed to be added?
            audio/ogg              ogg;
            model/gltf+json        gltf;
            model/gltf-binary      glb;
            font/woff2             woff2;
        }

        root /usr/share/nginx/html;

        server_tokens off; # Don't expose nginx server version (lol this is open source)

        # https://fv.gs/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765 happy ending in't it
        sendfile on;
        tcp_nodelay on;
        tcp_nopush on;

        brotli on;
        brotli_comp_level 11;
        brotli_static on; # Note: This will only serve the file if .br already exists. if not will just dynamically generate with comp level 11
        brotli_types application/xml application/wasm font/woff2 image/x-icon image/webp audio/ogg model/gltf-binary model/gltf+json application/octet-stream;
        brotli_min_length 20;
        gzip on;
        gzip_vary on;
        gzip_comp_level 9;
        gzip_types application/xml application/wasm font/woff2 image/x-icon image/webp audio/ogg model/gltf-binary model/gltf+json application/octet-stream;
        gzip_min_length 20;

        open_file_cache max=10000 inactive=60s;
        open_file_cache_valid 60s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;

        # Basically Location for web
        location / {
            include /usr/share/nginx/conf/common_headers.conf;
            index index.html;
            try_files $uri $uri/ =404;
        }

        # TODO add html to location such that content-type is added?
        # Basically Location for kloenk client
        location ~* \.(html|js|wasm|ico|webp|woff2|ogg|gltf|glb|bin)$ {
            include /usr/share/nginx/conf/common_headers.conf;
            try_files $uri $uri/ =404;
        }

        # Location for server-side
#                 sendfile on;
#                 tcp_nodelay on;
#                 tcp_nopush off;

    }
}