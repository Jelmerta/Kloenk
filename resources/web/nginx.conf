limit_req_zone $binary_remote_addr zone=ratelimit_zone:10m rate=10r/s; # multiple requests are made to retrieve resources, when we use CDN we can maybe lower

# Reroute to https. Disabled for now to allow http to work
server {
     listen 80 default_server;
     listen [::]:80 default_server;
     server_name _;
     return 301 https://$host$request_uri;  # Redirect all HTTP requests to HTTPS
}

server {
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        root /usr/share/nginx/html;

        index index.html;

        server_name _;

    	ssl_certificate /etc/ssl/domain.cert.pem;
    	ssl_certificate_key /etc/ssl/private.key.pem;

        # We want to make sure that no old version is being served to users. We could improve this with versioning/caches.
        # Not thought too much about the exact values provided below.
        add_header Cache-Control "private, s-maxage 0, max-age 0, must-revalidate, no-store";

        location / {
            # Make sure to handle additional requests beyond rate limit immediately
            limit_req zone=ratelimit_zone burst=10 nodelay;

            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files $uri $uri/ =404;
	        # proxy_pass http://localhost:8080;
        	# proxy_http_version 1.1;
	        # proxy_set_header Upgrade $http_upgrade;
        	# proxy_set_header Connection 'upgrade';
	        # proxy_set_header Host $host;
        	# proxy_cache_bypass $http_upgrade;
            # Top!
        }
}
