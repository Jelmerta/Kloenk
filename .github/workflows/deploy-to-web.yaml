name: deploy-to-web
run-name: Deploying application to web
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4.2.0
      
      # - name: Set up Node.js
      #   if: ${{ env.ACT }}
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '18'

      # - name: Set up QEMU
      #   if: ${{ env.ACT }}
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx to help out with building docker image (
        uses: docker/setup-buildx-action@v3

      # - name: Compile project
        # run: DOCKER_BUILDKIT=1 docker build . -t kloenk

      - name: Login to Docker Hub
        if: ${{ !env.ACT }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build docker image locally
        if: ${{ env.ACT }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: hydrogax/kloenk:newest

      - name: Build and push Docker images
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: 'true'
          tags: hydrogax/kloenk:latest
          # cache-from: type=registry,ref=hydrogax/kloenk:latest
          # cache-to: type=inline
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4.2.0

      - name: Install doctl (to access digital ocean api)
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Retrieve new container and run on server using remote ssh commands
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: docker pull hydrogax/kloenk && docker rm -f kloenk && docker run -d -v /etc/ssl:/etc/ssl:ro -p 80:80 -p 443:443 --name kloenk hydrogax/kloenk
