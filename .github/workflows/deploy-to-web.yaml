name: deploy-to-web
run-name: Deploying application to web
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Add target
        run: rustup target add wasm32-unknown-unknown

      - name: Download compiler
        uses: jetli/trunk-action@v0.4.0
        with:
          version: 'latest'

      - name: Build Project (WASM/JS/HTML)
        run: trunk build

      - name: Build local container
        if: ${{ env.ACT }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: hydrogax/kloenk:newest

      - name: Build and push Docker images
        if: ${{ !env.ACT }}
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: hydrogax/kloenk
          tag_with_ref: true
          tag_with_sha: true
          tags: latest

  deploy:
    needs: build
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install doctl (to access digital ocean api)
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Retrieve new container and run on server using remote ssh commands (not too proud of this, contains contents of retrieve_and_run_container.sh, could instead put this sh script on the server on droplet creation, perhaps including floating IP?)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: docker pull hydrogax/kloenk && docker rm -f kloenk && docker run -d -v /etc/ssl:/etc/ssl:ro -p 80:80 --name kloenk hydrogax/kloenk
