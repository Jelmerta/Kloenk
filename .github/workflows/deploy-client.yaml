name: deploy-to-web
run-name: Deploying client
on:
  push:
    branches: [ "main" ]
    paths: [ 'kloenk-client/**', '.github/workflows/deploy-client.yaml' ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4.2.0

      - name: Set up Docker Buildx to help out with building docker image (
        uses: docker/setup-buildx-action@v3

      #      - name: Login to Docker Hub
      #        uses: docker/login-action@v3
      #        with:
      #          username: ${{ secrets.DOCKERHUB_USERNAME }}
      #          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: ./kloenk-client
          push: false
          tags: hydrogax/kloenk-client:latest
          load: 'true'
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Move client outside container
        run: |
          mkdir kloenk-client/output && \
          docker run --rm --mount type=bind,src=${GITHUB_WORKSPACE}/kloenk-client/output,dst=/target hydrogax/kloenk-client cp -fa /app/output/. /target
        #          docker run --rm --mount type=bind,src=/app/output,dst=/src,readonly --mount type=volume,src=kloenk-static,dst=/target hydrogax/kloenk-client cp -f /src/* /target
        #          docker create --name kloenk-client hydrogax/kloenk-client && \
        #          docker cp kloenk-client:/app/output/ output/

      
      
      #          docker cp kloenk-client:/app/output/ /kloenk-client/html/assets/

      #        COPY --from=builder /app/output /usr/share/nginx/html
      #COPY assets /usr/share/nginx/html/assets

      #      - name: Retrieve new container and run on server using remote ssh commands
      #        uses: appleboy/ssh-action@v1.0.3
      #        uses: appleboy/scp-action@v1
      #        with:
      #          host: ${{ secrets.ARTIFACT_HOST }}
      #          username: ${{ secrets.ARTIFACT_USERNAME }}
      #  key: ${{ secrets.ARTIFACT_SSH_KEY }}
      #          script: docker create --name kloenk-client hydrogax/kloenk-client && docker cp kloenk-client:/app/output/ /usr/share/nginx/html && docker cp kloenk-client:/app/output/ /usr/share/nginx/html/assets/

      - name: Copy client to server using remote ssh commands
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.ARTIFACT_HOST }}
          username: ${{ secrets.ARTIFACT_USERNAME }}
          key: ${{ secrets.ARTIFACT_SSH_KEY }}
          source: "kloenk-client/output/*, kloenk-client/assets/"
          target: "."

      - name: Copy client to shared volume
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARTIFACT_HOST }}
          username: ${{ secrets.ARTIFACT_USERNAME }}
          key: ${{ secrets.ARTIFACT_SSH_KEY }}
          script: docker run --rm --mount type=bind,src=/home/deploy/kloenk-client,dst=/src,readonly alpine ls -a /src

      - name: Copy client to shared volume
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARTIFACT_HOST }}
          username: ${{ secrets.ARTIFACT_USERNAME }}
          key: ${{ secrets.ARTIFACT_SSH_KEY }}
          script: docker run --rm --mount type=bind,src=/home/deploy/kloenk-client,dst=/src,readonly --mount type=volume,src=kloenk-static,dst=/target alpine cp -fa /src/output/. /target/client && cp -far /src/assets /target/
      #        docker run --rm --mount type=bind,src=/home/deploy/kloenk-web,dst=/source,readonly --mount type=volume,src=kloenk-static,dst=/target alpine cp /source/html/index.html /target/index.html
      #todo leaks user, maybe pwd +/output or something

      - name: Copy client to shared volume
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.ARTIFACT_HOST }}
          username: ${{ secrets.ARTIFACT_USERNAME }}
          key: ${{ secrets.ARTIFACT_SSH_KEY }}
          script: docker run --rm --mount type=volume,src=kloenk-static,dst=/target alpine ls -a /target

  #  TODO Assets directory



  #      - name: Copy client to server using remote ssh commands
  #        uses: appleboy/ssh-action@v1.0.3
  #        with:
  #          host: ${{ secrets.ARTIFACT_HOST }}
  #          username: ${{ secrets.ARTIFACT_USERNAME }}
  #          key: ${{ secrets.ARTIFACT_SSH_KEY }}
  #          script: docker run --rm --mount type=volume,src=kloenk-static,dst=/target alpine ls /target

  #      - name: Copy client to server using remote ssh commands
  #        uses: appleboy/scp-action@v1
  #        with:
  #          host: ${{ secrets.ARTIFACT_HOST }}
  #          username: ${{ secrets.ARTIFACT_USERNAME }}
  #          key: ${{ secrets.ARTIFACT_SSH_KEY }}
  #          source: "output/*"
  #          target: "/usr/share/nginx/html/"
  #
  #      - name: Copy assets to server using remote ssh commands
  #        uses: appleboy/scp-action@v1
  #        with:
  #          host: ${{ secrets.ARTIFACT_HOST }}
  #          username: ${{ secrets.ARTIFACT_USERNAME }}
  #          key: ${{ secrets.ARTIFACT_SSH_KEY }}
  #          source: "kloenk-client/html/assets/"
  #          target: "/usr/share/nginx/html/assets/"

  #          TODO just build and copy the files? why not? no need to use the registry really?
  #   TODO dont need secrets if that's true...
  #  maybe infra still needs though
#
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout project
#        uses: actions/checkout@v4.2.0
#
#      - name: Retrieve new container and run on server using remote ssh commands
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.ARTIFACT_HOST }}
#          username: ${{ secrets.ARTIFACT_USERNAME }}
#          key: ${{ secrets.ARTIFACT_SSH_KEY }}
#          script: docker pull hydrogax/kloenk-client && docker create --name kloenk-client hydrogax/kloenk-client && docker cp kloenk-client:/app/output/ /usr/share/nginx/html && docker cp kloenk-client:/app/output/ /usr/share/nginx/html/assets/
